// <auto-generated />
using System;
using Domination_WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domination_WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220318024438_initialmigrations")]
    partial class initialmigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domination_WebAPI.Models.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Modifier")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResearchTechId")
                        .HasColumnType("int");

                    b.Property<int>("Resource")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchTechId");

                    b.ToTable("Bonuses");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.GameNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentResourceType")
                        .HasColumnType("int");

                    b.Property<int>("GameZodeId")
                        .HasColumnType("int");

                    b.Property<int>("GameZoneId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDevelopable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastProducedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NodeImprovementId")
                        .HasColumnType("int");

                    b.Property<int>("NodeQuality")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("xCoord")
                        .HasColumnType("int");

                    b.Property<int>("yCoord")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameZoneId");

                    b.HasIndex("NodeImprovementId");

                    b.ToTable("GameNodes");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.GameZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("xCoord")
                        .HasColumnType("int");

                    b.Property<int>("yCoord")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameZones");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.NodeImprovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<double>("Modifier")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<int>("StaticBonus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NodeImprovement");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.PlayerBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BonusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BonusId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerBonus");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.PlayerResearchTech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResearchTechId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchTechId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerResearchTechs");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.ResearchTech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResearchCost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResearchTech");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AcquisitionPoints")
                        .HasColumnType("int");

                    b.Property<string>("Adjective")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AirForce")
                        .HasColumnType("int");

                    b.Property<int>("Army")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Culture")
                        .HasColumnType("int");

                    b.Property<int>("Food")
                        .HasColumnType("int");

                    b.Property<int>("IndustrialGoods")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MilitaryMight")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("NationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Navy")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.Bonus", b =>
                {
                    b.HasOne("Domination_WebAPI.Models.ResearchTech", "ResearchTech")
                        .WithMany()
                        .HasForeignKey("ResearchTechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchTech");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.GameNode", b =>
                {
                    b.HasOne("Domination_WebAPI.Models.GameZone", "GameZone")
                        .WithMany("Nodes")
                        .HasForeignKey("GameZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domination_WebAPI.Models.NodeImprovement", "NodeImprovement")
                        .WithMany()
                        .HasForeignKey("NodeImprovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameZone");

                    b.Navigation("NodeImprovement");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.PlayerBonus", b =>
                {
                    b.HasOne("Domination_WebAPI.Models.Bonus", "Bonus")
                        .WithMany()
                        .HasForeignKey("BonusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domination_WebAPI.Models.User", "User")
                        .WithMany("Bonus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bonus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.PlayerResearchTech", b =>
                {
                    b.HasOne("Domination_WebAPI.Models.ResearchTech", "ResearchTech")
                        .WithMany()
                        .HasForeignKey("ResearchTechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domination_WebAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchTech");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.GameZone", b =>
                {
                    b.Navigation("Nodes");
                });

            modelBuilder.Entity("Domination_WebAPI.Models.User", b =>
                {
                    b.Navigation("Bonus");
                });
#pragma warning restore 612, 618
        }
    }
}
